{"meta":{"title":"舆地纪要","subtitle":null,"description":"从地表的痕迹去摸索时空的演化","author":"南河三","url":"https://PeaceJiang.github.io","root":"/"},"pages":[{"title":"","date":"2023-07-31T15:59:47.604Z","updated":"2023-07-31T15:59:47.604Z","comments":true,"path":"ChatAI/index.html","permalink":"https://peacejiang.github.io/ChatAI/index.html","excerpt":"","text":""},{"title":"","date":"2023-06-25T12:07:10.749Z","updated":"2023-06-25T12:07:10.749Z","comments":true,"path":"404/index.html","permalink":"https://peacejiang.github.io/404/index.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"个人介绍","date":"2023-06-06T05:51:40.000Z","updated":"2023-08-03T11:16:27.636Z","comments":true,"path":"about/index.html","permalink":"https://peacejiang.github.io/about/index.html","excerpt":"","text":"博客内容该博客名为《舆地纪要》，“舆地”一词源自中国古代地理学之名，“纪要”一词代表笔记，该博客旨在分享笔者学习关于地理学的一些所学、所思、所感。当代地理学的研究范围为大致可分为三类： 自然地理学：研究地球表面的自然环境的特征、成因以及演化。以及地球表面各个要素（水文、地质地貌、大气、生物、人类活动）之间的相互作用。 人文地理学：利用定性和定量的分析方法，探究人类活动与地表环境之间的相互作用关系。如经济、文化、政治的地理差异及形成原因。 3S集成：地理信息科学（GIS）、遥感 （RS）与卫星导航系统（GNSS）合称地理学的3S技术，由传统地理学与计算机科学结合的交叉学科，应用于地理数据管理、地理制图、空间分析与地理知识发现等方面。改博客中主要分享3S技术的研究、技术以及相关软件的学习笔记。 地理学到底是什么？地理能解决什么问题？又有什么意义？这一系列问题我想用吴清源老师的一句话来解释，之于围棋，之于地理，大抵如此。 在广阔的世界里谋求和谐 —— 吴清源 作者介绍 地理学背景及地质行业从业者，对地理学各类别均有基本涉猎但不深入。对音乐感兴趣，最喜欢的乐队是五月天（Mayday），但是常听国内的朋克乐队（推荐葡萄不愤怒、指人儿（Finger Family）、隔壁团乐队（NEXT DOOR BAND）等） 学习背景 2023-07&#x2F;至今 中国地质调查局成都地质调查中心 自然资源督察技术室 2020-09&#x2F;2023-06 首都师范大学 学院：资源环境与旅游学院专业：地图学与地理信息系统(070503)学位：理学 硕士研究方向：于首都师范大学 空间分析与数据挖掘(GeoDataMining)实验室，从事地理时空大数据挖掘、城市计算方向的研究。毕业论文主要研究国内368个城市在2021年的动态交互特征。 个人研究成果：点击查看 Jiang, H., Yi, D., Liu, R., Luo, S., &amp; Zhang, J. (2022). Exploring the spatiotemporal characteristics of intracity travels by time series clustering: A case study of Beijing. Transactions in GIS, 26(7), 3044-3073.Jiang, H., Luo, S., Qin, J., Liu, R., Yi, D., Liu, Y., &amp; Zhang, J. (2022). Exploring the Inter-Monthly Dynamic Patterns of Chinese Urban Spatial Interaction Networks Based on Baidu Migration Data. ISPRS International Journal of Geo-Information, 11(9), 486. 其他相关成果：点击查看 Luo, S., Jiang, H., Yi, D., Liu, R., Qin, J., Liu, Y., &amp; Zhang, J. (2022). PM2SFCA: Spatial Access to Urban Parks, Based on Park Perceptions and Multi-Travel Modes. A Case Study in Beijing. ISPRS International Journal of Geo-Information, 11(9), 488.Qin, J., Luo, S., Yi, D., Jiang, H., &amp; Zhang, J. (2022). Measuring cluster-based spatial access to shopping stores under real-time travel time. Sustainability, 14(4), 2310.Liu, Y., Gao, X., Yi, D., Jiang, H., Zhao, Y., Xu, J., &amp; Zhang, J. (2022). Investigating human travel patterns from an activity semantic flow perspective: a case study within the fifth ring road in beijing using taxi trajectory data. ISPRS International Journal of Geo-Information, 11(2), 140. 2016-09&#x2F;2020-06 四川师范大学 学院：地理与资源科学学院专业：自然地理与资源环境(070502)学位：理学 学士主要研究地理学基础知识，包括气候与气象、地质与地貌、水文与水资源、土壤地理学、生态学、植物地理学等。 写在最后由于个人知识水平、认知水平有限。若在整理过程中出现错误，或是有更好的建议，请大家在评论区及时反馈。请大家不吝赐教！！！"},{"title":"","date":"2023-08-07T16:26:18.315Z","updated":"2023-08-07T16:26:18.315Z","comments":false,"path":"artitalk/index.html","permalink":"https://peacejiang.github.io/artitalk/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2023-06-06T13:33:54.000Z","updated":"2023-06-25T16:12:29.757Z","comments":true,"path":"categories/index.html","permalink":"https://peacejiang.github.io/categories/index.html","excerpt":"","text":""},{"title":"朋友们","date":"2023-06-06T05:54:07.000Z","updated":"2023-06-25T12:06:06.004Z","comments":true,"path":"friends/index.html","permalink":"https://peacejiang.github.io/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"所有标签","date":"2023-06-06T05:53:23.000Z","updated":"2023-06-25T12:06:17.011Z","comments":true,"path":"tags/index.html","permalink":"https://peacejiang.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"SQL第三章：DQL数据查询语言","slug":"SQL第三章：DQL数据查询语言","date":"2023-09-11T15:15:47.000Z","updated":"2023-09-11T15:24:32.231Z","comments":true,"path":"2023/09/11/SQL第三章：DQL数据查询语言/","link":"","permalink":"https://peacejiang.github.io/2023/09/11/SQL%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9ADQL%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80/","excerpt":"DQL：Data Query Language，用来查询数据库中的数据。","text":"DQL：Data Query Language，用来查询数据库中的数据。 单表查询简单查询 12345678910# 查询表中的所有数据SELECT * FROM student;Select id,name,age,sex,address from student; # 列出所有字段# 指定列查询Select id,name from student; # 列出需要查询的字段# 别名查询（在查询时，给查询的列或表起一个其他的（一般是稍短的名字，或为了防止重复）名字就叫做别名。使用别名的好处是方便查看和处理查询到的数据。）SELECT 字段名1 AS 别名, 字段名2 AS 别名... FROM 表名;SELECT NAME AS &#x27;姓名&#x27;, age AS &#x27;年龄&#x27; FROM student; # 设定别名并查询 💡 别名查询注意事项 查询时给表取别名目前还看不到效果，需要到多表查询的时候才能体现出其好处。 AS关键字可以省略。 123# 查询并去除重复记录SELECT DISTINCT 字段名 FROM 表名SELECT DISTINCT name,age,address FROM student # 去除选择字段均相同的重复记录 💡 查询去重： 查询去重并不会改变原表的数据，仅仅会提取原表中选择字段的非重复数据 1234# 查询结果参与运算（+ - * /）# 在查询语句中，查询的列的可以和其他值做数学运算(加、减、乘、除等)。运算结果只会影响展示，不会影响表中的数据。SELECT 列名1 + 固定值 FROM 表名SELECT 列名1 + 列名2 FROM 表名 条件查询运算符 在查询条件中，可以使用多种比较运算符来表示查询条件。&#x3D; 等于，&gt; 大于，&lt;小于，&lt;&#x3D;小于等于，&gt;&#x3D;大于等于， &lt;&gt;或!&#x3D;不等于 逻辑运算符 and(&amp;&amp;) 多个条件同时满足or(||) 多个条件其中一个满足not(!) 不满足 12# 查询age大于35或性别为男的学生(两个条件其中一个满足)SELECT * FROM student WHERE age&gt;35 OR sex=&#x27;男&#x27;; 指定范围内查询 in 123SELECT 字段名 FROM 表名 WHERE 字段 in (数据1, 数据2...); # in里面的每个数据都会作为一次条件，只要满足条件的就会显示。SELECT * FROM student WHERE id IN (1,3,5); # 这里的IN 相当于将OR条件的连接 SELECT * FROM student WHERE id=1 OR id=3 OR id=5; 模糊查询 MySQL通配符有两个： %: 表示0个或多个字符(任意个字符) _: 表示一个字符 1234567# 模糊查询姓马的学生SELECT * FROM student WHERE NAME LIKE &#x27;马%&#x27;;# 查询姓马，且姓名有三个字的学生SELECT * FROM student3 WHERE NAME LIKE &#x27;马__&#x27;;# 查询姓名中包含&#x27;德&#x27;字的学生SELECT * FROM student3 WHERE NAME LIKE &#x27;%德%&#x27;; 空值查询 查询某个字段为空（null）的数据，不是使用&#x3D;null（null和任何值都不相等），而是使用is null来进行判断。 12# 查询english成绩为null的学生信息SELECT * FROM student WHERE english IS NULL 排序通过ORDER BY子句，可以将查询出的结果进行排序，排序只影响显示结果，不会影响数据库中数据的顺序。 单列排序 12345678/*SELECT 字段名 FROM 表名 [WHERE 条件] ORDER BY 字段名 [ASC|DESC]; ASC: 升序，默认是升序 DESC: 降序*/# 查询所有数据，使用年龄降序排序：SELECT * FROM student3 ORDER BY age DESC; 组合排序 组合排序就是先按第一个字段进行排序，如果第一个字段相同，才按第二个字段进行排序，依次类推。 1234SELECT 字段名 FROM 表名 [WHERE 条件] ORDER BY 字段名1 [ASC|DESC],字段名2 [ASC|DESC];# 查询所有数据，在年龄降序排序的基础上，如果年龄相同再以数学成绩降序排序：SELECT * FROM student3 ORDER BY age DESC, math DESC; 函数单行函数：是指对于每一行数据进行计算后得到一行输出结果。SQL单行函数根据数据类型分为字符函数、数字函数、日期函数、转换函数等。 1234567891011121314151617181920212223242526272829303132333435363738394041SELECT ABS(-1) -- 返回 x 的绝对值,返回1SELECT CEIL(1.5) -- 返回大于或等于 x 的最小整数（向上取整）返回2SELECT FLOOR(1.5) -- 返回小于或等于 x 的最大整数（向下取整）返回1SELECT RAND() --返回 0 到 1 的随机数0.93099315644334SELECT ROUND(1.23456) --四舍五入取整，返回1SELECT CONCAT(&quot;SQL &quot;, &quot;Runoob &quot;, &quot;Google &quot;, &quot;Facebook&quot;) AS ConcatenatedString; --合并字符串SELECT LOCATE(&#x27;st&#x27;,&#x27;myteststring&#x27;); -- 返回字符串a在字符串b中的位置，5SELECT LOWER(&#x27;RUNOOB&#x27;) -- 所有字母变小写 runoobSELECT UPPER(&quot;runoob&quot;); -- 所有字母变大写 RUNOOBSELECT REPLACE(&#x27;abc&#x27;,&#x27;a&#x27;,&#x27;x&#x27;) --字符串替换 xbcSELECT SUBSTRING(&quot;RUNOOB&quot;, 2, 3) AS ExtractString; -- 字符串切片 UNOSELECT TRIM(&#x27; RUNOOB &#x27;) AS TrimmedString; -- 去除字符串前后多余的空格&#x27;RUNOOB&#x27;SELECT reverse(&#x27;dog&#x27;); -- 反转字符串，返回godSELECT now(); -- 返回当前系统时间SELECT sysdate(); -- 返回当前系统时间,(包括年月日时分秒)SELECT curdate(); -- 返回当前日期(年月日)SELECT curtime(); -- 返回当前时间(时分秒)SELECT MONTH(&#x27;2020-11-12&#x27;); -- 返回参数中的月份SELECT WEEK(&#x27;2020-11-12&#x27;); -- 返回参数日期是一年中的第几个星期SELECT DAY(&#x27;2020-11-12&#x27;); -- 返回参数中的日值SELECT DATE_ADD(&#x27;2020-11-12 12:11:22&#x27;,interval 3 MONTH) # date_add(date,INTERVAL expr type)date 参数是合法的日期表达式。expr 参数是您希望添加的时间间隔。/*type 参数可以是下列值：MICROSECONDSECONDMINUTEHOURDAYWEEKMONTHQUARTERYEARSECOND_MICROSECONDMINUTE_MICROSECONDMINUTE_SECONDHOUR_MICROSECONDHOUR_SECONDHOUR_MINUTEDAY_MICROSECONDDAY_SECONDDAY_MINUTEDAY_HOURYEAR_MONTH*/ 流程控制函数","categories":[{"name":"计算机","slug":"计算机","permalink":"https://peacejiang.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"SQL","slug":"计算机/SQL","permalink":"https://peacejiang.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/SQL/"}],"tags":[{"name":"SQL笔记","slug":"SQL笔记","permalink":"https://peacejiang.github.io/tags/SQL%E7%AC%94%E8%AE%B0/"}]},{"title":"SQL第二章：DML数据操纵语言","slug":"SQL第二章：DML数据操纵语言","date":"2023-09-11T15:13:50.000Z","updated":"2023-09-11T15:24:36.158Z","comments":true,"path":"2023/09/11/SQL第二章：DML数据操纵语言/","link":"","permalink":"https://peacejiang.github.io/2023/09/11/SQL%E7%AC%AC%E4%BA%8C%E7%AB%A0%EF%BC%9ADML%E6%95%B0%E6%8D%AE%E6%93%8D%E7%BA%B5%E8%AF%AD%E8%A8%80/","excerpt":"DML: Data Manipulation Language，用来在数据库表中更新，增加和删除记录。","text":"DML: Data Manipulation Language，用来在数据库表中更新，增加和删除记录。 插入数据表中的记录12# 插入记录INSERT INTO student (id, name, age, sex) VALUES (1, &#x27;张三&#x27;, 20, &#x27;男&#x27;); # 向学生表中添加 id, name, age, sex数据 💡 **插入记录注意事项** 值与字段必须对应，个数相同，类型相同 值的数据大小必须在字段的长度范围内 varchar() 除了数值类型外，其它的字段类型的值必须使用引号引起（建议单引号） 如果要插入空值，可以不写字段，或者插入null 12# 不指定字段插入记录INSERT INTO student VALUES (3, &#x27;王五&#x27;, 18, &#x27;男&#x27;, &#x27;北京&#x27;); # 此时按表的顺序自动插入 蠕虫复制（在已有的数据基础之上，将原来的数据进行复制，插入到对应的表中。） 12345# 创建student2表，student2结构和student表结构一样CREATE TABLE student2 LIKE student;# 将student表中的数据添加到student2表中INSERT INTO student2 SELECT * FROM student 删除表记录不带条件删除 12# DELETE FROM 表名DELETE FROM student; # 删除student表中的所有数据 带条件删除 12# DELETE FROM 表名 WHERE 条件DELETE FROM student WHERE id=3 # 带条件删除数据，删除id为3的记录 更新表记录不带条件更新 12# UPDATE 表名 SET 字段1=值1[,字段2=值2,,...,字段n=值n]UPDATE student SET sex=&#x27;女&#x27;; # 记录中所有性别字段都变成女 带条件更新（使用where语句） 12# UPDATE 表名 SET 字段1=值1[,字段2=值2,,...,字段n=值n][where 条件]UPDATE student SET sex=&#x27;男&#x27; WHERE id=2; # 将id号为2的学生性别改成男","categories":[{"name":"计算机","slug":"计算机","permalink":"https://peacejiang.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"SQL","slug":"计算机/SQL","permalink":"https://peacejiang.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/SQL/"}],"tags":[{"name":"SQL笔记","slug":"SQL笔记","permalink":"https://peacejiang.github.io/tags/SQL%E7%AC%94%E8%AE%B0/"}]},{"title":"SQL第一章：DDL数据定义语言","slug":"SQL第一章：DDL数据定义语言","date":"2023-08-08T15:33:54.000Z","updated":"2023-08-08T15:40:59.397Z","comments":true,"path":"2023/08/08/SQL第一章：DDL数据定义语言/","link":"","permalink":"https://peacejiang.github.io/2023/08/08/SQL%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9ADDL%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80/","excerpt":"数据定义语言（DDL）：Data Definition Language，用来定义数据库的对象，如数据表、视图、索引等。","text":"数据定义语言（DDL）：Data Definition Language，用来定义数据库的对象，如数据表、视图、索引等。 数据库的增删改查、使用1234567891011121314151617181920212223# 创建数据库CREATE DATABASE mydb1;CREATE DATABASE IF NOT EXISTS mydb2;# 创建指定字符集的数据库CREATE DATABASE mydb3 CHARACTER SET UTF8;CREATE DATABASE IF NOT EXISTS mydb2 SET UTF8;/*针对不同字符集，MySQL指定了不同的排序规则（可以参考MySQL的帮助文档）。例如：utf8字符集中指定的 utf8_general_ci 和 utf8_bin，对数据库中存储数据库的规则就有所不同。 utf8_general_ci：ci是 case insensitive, 即 &quot;大小写不敏感&quot;, a 和 A 会在字符判断中会被当做一样的。 utf8_bin：将字符串每个字符串用二进制数据编译存储，区分大小写，而且可以存二进制的内容。*/# 查询数据库SHOW databases; # 查询所有数据库SHOW CREATE DATABASE mydb3; # 查看指定数据库# 修改数据库。只能修改数据库的字符集和排序规则，不能修改数据库名字ALTER DATABASE mydb3 CHARACTER SET gbk COLLATE gbk_bin;# 删除数据库DROP DATABASE mydb3;SELECT DATABASE(); # 查看正在使用的数据库USE mydb1; # 使用规定的数据库 操作表的DDL123456789101112131415161718192021222324# 创建表/*注意：在创建表之前，一定要先使用数据库（也就是说，表一定要创建在某个数据库中）*/# CREATE TABLE 表名 (字段名1 数据类型,字段名2 数据类型,…,字段名n 数据类型)CREATE TABLE student ( id INT, name VARCHAR(20), birthday date ); # 创建student表包含id,name,age,sex字段# 查看表SHOW tables; # 查看所有表DESC student; # 查看表结构describe student; # 查看表结构SHOW CREATE TABLE student; # 查看创建表的语句CREATE TABLE s1 LIKE student; # 复制表结构，复制与student相同结构的s1表# 修改表名RENAME TABLE s1 TO st1; # RENAME TABLE 表名 TO 新表名# 修改编码方式 ALTER TABLE st1 CHARACTER SET gbk; # ALTER TABLE 表名 character set 字符集# 删除表DROP TABLE st1; 表单中的列操作123456789101112# 添加列ALTER TABLE s1 ADD remark VARCHAR(20); # ALTER TABLE 表名 ADD 列名 类型# 修改列类型ALTER TABLE s1 MODIFY remark VARCHAR(100); # ALTER TABLE 表名 MODIFY 列名 新的类型# 修改列名ALTER TABLE s1 CHANGE remark intro varchar(30); # ALTER TABLE 表名 CHANGE 旧列名 新列名 类型# 删除列ALTER TABLE s1 DROP intro; # ALTER TABLE 表名 DROP 列名","categories":[{"name":"计算机","slug":"计算机","permalink":"https://peacejiang.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"SQL","slug":"计算机/SQL","permalink":"https://peacejiang.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/SQL/"}],"tags":[{"name":"SQL笔记","slug":"SQL笔记","permalink":"https://peacejiang.github.io/tags/SQL%E7%AC%94%E8%AE%B0/"}]},{"title":"VSCode与ArcGIS的结合","slug":"VSCode与ArcGIS的结合","date":"2023-06-25T06:01:53.000Z","updated":"2023-08-03T11:23:24.804Z","comments":true,"path":"2023/06/25/VSCode与ArcGIS的结合/","link":"","permalink":"https://peacejiang.github.io/2023/06/25/VSCode%E4%B8%8EArcGIS%E7%9A%84%E7%BB%93%E5%90%88/","excerpt":"","text":"前言ArcGIS是常用的GIS桌面软件，其自带的arcpy包是使用Python开发常用的闭源站点包，因此若要使用arcpy则必须使用ArcGIS自带的python解释器。在ArcGIS for desktop中，ArcMap的python版本为2.7，为python2系列。随着新一代桌面端GIS软件ArcGIS Pro的推出，python3也以conda虚拟环境的形式结合到Pro中，本文介绍如何使用外部编辑器结合Pro中的python解释器来调用arcpy实现ArcGIS的python脚本开发。 软件说明软件版本：ArcGIS Pro 3.0版本、VSCode最新稳定版 操作流程设定步骤 首先找到ArcGIS Pro的安装目录，并找到python解释器所在的目录:\\..\\Pro\\bin\\Python\\envs\\arcgispro-py3\\python.exe（默认路径），你也可以通过Pro中的包管理器新建一个python的虚拟环境（推荐） 在VSCode安装Python、jupyter等相关扩展（一般会推荐安装），随意打开目录并新建一个.py的文件，VSCode会自动选择默认的python解释器，若你的电脑并不带有python解释器，则需要通过手动选择目录的方式找到本地的解释器 点击后如果已识别到路径即可直接选择，如果未能识别可以通过文件管理来找到python解释器，如下图： 测试结果编写python脚本并测试运行结果，测试代码如下： 1234import arcpyarcpy.env.workspace = r&#x27;D:\\DATA\\全国矢量.gdb&#x27;arcpy.ListFeatureClasses() 可以使用jupyter来执行python命令，选择Pro的python内核，执行命令如下： 总结本文介绍了VSCode与ArcGIS Pro自带的Python解释器的运用，其他编辑器的使用方式同理，只要链接到Pro使用的Python解释器即可使用Pro所含有的arcpy、arcgis专属包。","categories":[{"name":"3S技术","slug":"3S技术","permalink":"https://peacejiang.github.io/categories/3S%E6%8A%80%E6%9C%AF/"},{"name":"GIS软件应用","slug":"3S技术/GIS软件应用","permalink":"https://peacejiang.github.io/categories/3S%E6%8A%80%E6%9C%AF/GIS%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"ArcGIS","slug":"ArcGIS","permalink":"https://peacejiang.github.io/tags/ArcGIS/"},{"name":"VSCode","slug":"VSCode","permalink":"https://peacejiang.github.io/tags/VSCode/"},{"name":"Arcpy","slug":"Arcpy","permalink":"https://peacejiang.github.io/tags/Arcpy/"},{"name":"脚本开发","slug":"脚本开发","permalink":"https://peacejiang.github.io/tags/%E8%84%9A%E6%9C%AC%E5%BC%80%E5%8F%91/"}]},{"title":"ArcGIS Pro 三维数据可视化","slug":"ArcGIS-Pro-三维数据可视化","date":"2023-06-09T12:46:57.000Z","updated":"2023-08-03T11:27:05.599Z","comments":true,"path":"2023/06/09/ArcGIS-Pro-三维数据可视化/","link":"","permalink":"https://peacejiang.github.io/2023/06/09/ArcGIS-Pro-%E4%B8%89%E7%BB%B4%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/","excerpt":"","text":"数据数据源为上海市局部建筑面数据，通过区域汇总得到建筑面的格网数据，属性值代表格网内建筑的平均楼层高度（不代表绝对高度），分级方式为自然间断点法，原数据如下图： 三维可视化流程在视图-转换中选择转局部场景 然后会弹出三维视图，三维视图左边会有两个图层组，3D图层组、2D图层组。转换后数据一开始在2D图层组，如果需要三维可视化需要拖入到3D图层组。同时，也可以在2D图层组中加入底图数据，如下图： 调整图层参数，在高程选项卡中设定拉伸类型为“绝对高度”，按照“MEAN_floor”字段，为了美观，将单位选择为千米。同时在符号系统中将轮廓设定为0 修改图层色带为灰度拉伸，调整透明度为60%（可以按照后期效果调整），设置好三维图的底座 从数据目录中再次加入该图层，然后按照下图进行设置 修改图层的符号系统，用自然间断点进行显示，符号的轮廓设为0 最后成果图如下所示：","categories":[{"name":"3S技术","slug":"3S技术","permalink":"https://peacejiang.github.io/categories/3S%E6%8A%80%E6%9C%AF/"},{"name":"GIS软件应用","slug":"3S技术/GIS软件应用","permalink":"https://peacejiang.github.io/categories/3S%E6%8A%80%E6%9C%AF/GIS%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"}],"tags":[{"name":"ArcGIS","slug":"ArcGIS","permalink":"https://peacejiang.github.io/tags/ArcGIS/"},{"name":"数据可视化","slug":"数据可视化","permalink":"https://peacejiang.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"}]},{"title":"test_site","slug":"test-site","date":"2023-04-22T03:14:18.000Z","updated":"2023-06-25T12:45:36.190Z","comments":true,"path":"2023/04/22/test-site/","link":"","permalink":"https://peacejiang.github.io/2023/04/22/test-site/","excerpt":"","text":"测试写作功能这是编写的得一个网站 123456import pandas as pdimport numpy as npimport arcpydata = pd.read(filepath) 超链接写作结束！！！ 12345带 &#123;% u 下划线 %&#125; 的文本；带 &#123;% emp 着重号 %&#125; 的文本；带 &#123;% wavy 波浪线 %&#125; 的文本；带 &#123;% del 删除线 %&#125; 的文本键盘样式的文本：&#123;% kbd ⌘ %&#125; + &#123;% kbd D %&#125;密码样式的文本：&#123;% psw 这里没有验证码 %&#125; 带 下划线 的文本；带 着重号 的文本；带 波浪线 的文本；带 删除线 的文本","categories":[{"name":"博客测试","slug":"博客测试","permalink":"https://peacejiang.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"调整","slug":"调整","permalink":"https://peacejiang.github.io/tags/%E8%B0%83%E6%95%B4/"},{"name":"测试","slug":"测试","permalink":"https://peacejiang.github.io/tags/%E6%B5%8B%E8%AF%95/"}],"author":"南河三"}],"categories":[{"name":"计算机","slug":"计算机","permalink":"https://peacejiang.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"SQL","slug":"计算机/SQL","permalink":"https://peacejiang.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/SQL/"},{"name":"3S技术","slug":"3S技术","permalink":"https://peacejiang.github.io/categories/3S%E6%8A%80%E6%9C%AF/"},{"name":"GIS软件应用","slug":"3S技术/GIS软件应用","permalink":"https://peacejiang.github.io/categories/3S%E6%8A%80%E6%9C%AF/GIS%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8/"},{"name":"博客测试","slug":"博客测试","permalink":"https://peacejiang.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"SQL笔记","slug":"SQL笔记","permalink":"https://peacejiang.github.io/tags/SQL%E7%AC%94%E8%AE%B0/"},{"name":"ArcGIS","slug":"ArcGIS","permalink":"https://peacejiang.github.io/tags/ArcGIS/"},{"name":"VSCode","slug":"VSCode","permalink":"https://peacejiang.github.io/tags/VSCode/"},{"name":"Arcpy","slug":"Arcpy","permalink":"https://peacejiang.github.io/tags/Arcpy/"},{"name":"脚本开发","slug":"脚本开发","permalink":"https://peacejiang.github.io/tags/%E8%84%9A%E6%9C%AC%E5%BC%80%E5%8F%91/"},{"name":"数据可视化","slug":"数据可视化","permalink":"https://peacejiang.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"},{"name":"调整","slug":"调整","permalink":"https://peacejiang.github.io/tags/%E8%B0%83%E6%95%B4/"},{"name":"测试","slug":"测试","permalink":"https://peacejiang.github.io/tags/%E6%B5%8B%E8%AF%95/"}]}